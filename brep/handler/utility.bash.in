# file      : brep/handler/utility.bash.in
# license   : MIT; see accompanying LICENSE file

# Generally useful utility functions.

if [ "$brep_utility" ]; then
  return 0
else
  brep_utility=true
fi

# Diagnostics.
#
# We expect the user to set the verbose variable either to true or empty
# (false).
#
if [ ! -v verbose ]; then
  echo "error: variable 'verbose' is not set" >&2
  exit 1
fi

function info () { echo "$*" 1>&2; }
function error () { info "$*"; exit 1; }
function trace () { if [[ "$verbose" ]]; then info "$*"; fi }

# Trace a command line, quoting empty arguments as well as those that contain
# spaces.
#
function trace_cmd () # <cmd> <arg>...
{
  if [[ "$verbose" ]]; then
    local s="+"
    while [[ $# -gt 0 ]]; do
      if [[ -z "$1" || -z "${1##* *}" ]]; then
        s="$s '$1'"
      else
        s="$s $1"
      fi

      shift
    done

    info "$s"
  fi
}

# Trace the current function name and arguments.
#
function trace_func () # <args>...
{
  trace_cmd "${FUNCNAME[1]}" "$@"
}

# Trace and run a command.
#
function run () # <cmd> <arg>...
{
  trace_cmd "$@"
  "$@"
}

# Same as above but also redirect the command stderr to /dev/null, unless
# running in the verbose mode.
#
# Note that we don't redirect stdout, so it can still be captured.
#
function run_silent () # <cmd> <arg>...
{
  trace_cmd "$@"

  if [ "$verbose" ]; then
    "$@"
  else
    "$@" 2>/dev/null
  fi
}
